"use strict";var feedURL,EventEmitter=require("events").EventEmitter,electron=require("electron"),ipc=electron.ipcMain,app=electron.app,fs=require("fs-extra"),isLinux="linux"==process.platform,t_workingDir=require("path").join(__dirname,"../"),License=require("License.js"),Dict=require("Dict.js"),ProgressBar=require("electron-progressbar"),DownloadTask=require("Downloader.js"),WindowController=require("WindowController.js"),updater=new EventEmitter,errCancel=new Error("cancel");function makeRequest(e){var t=require("url").parse,r=require("https"),a=require("http"),n=t(e);return("https:"===n.protocol?r:a).request({method:"GET",hostname:n.hostname,path:n.path,port:n.port,maxRedirect:3})}function request(e){return new Promise(function(t,r){var a=makeRequest(e);a.on("response",function(e){var r=[];e.on("data",function(e){r.push(e)}),e.on("end",function(){t({statusCode:e.statusCode,body:Buffer.concat(r).toString("utf-8")})})}),a.end(),a.on("error",function(e){r(e)})})}var labels=["Check updates automatically","Skip This Version","Remind Me Later","Download Update","New version available.","Latest version is $1, your version is $2"];updater.init=function(){return feedURL=global.betaVersion?`https://typora.io/windows/dev_release_${"x64"===process.arch?"64":"32"}.json`:"x64"===process.arch&&(global.devVersion||app.setting.get("autoUpdateToDev"))?"https://typora.io/releases/dev_windows_64.json":`https://typora.io/releases/windows_${"x64"===process.arch?"64":"32"}.json`,Dict.init().then(function(){return labels.forEach(function(e,t){labels[t]=Dict.getPanelString(e)}),Promise.resolve()})},updater.showDetailWindow=function(e,t,r){updater.progressBar&&(updater.progressBar.close(),updater.progressBar=null),updater.win&&(updater.win.destroy(),updater.win=null);var a=WindowController.showPanelWindow({title:Dict.getPanelString("Updater"),width:640,height:600,path:"updater/updater.html?curVersion=$1&newVersion=$2&labels=$3&enableAutoUpdate=$4&releaseNoteLink=$5&hideAutoUpdates=$6".replace("$1",e).replace("$2",t).replace("$3",encodeURIComponent(JSON.stringify(labels))).replace("$4",JSON.stringify(!1!==app.setting.get("enableAutoUpdate"))).replace("$5",encodeURIComponent(r||"https://www.typora.io/windows/dev_release.html")).replace("$6",global.devVersion&&!global.betaVersion&&!License.getHasLicense())});updater.win=a,a.on("closed",function(){updater.win=null})},updater.showUI=function(){updater.win||updater.progressBar||(updater.progressBar=new ProgressBar({title:Dict.getPanelString("Updater"),text:Dict.getPanelString("Checking Updates…"),indeterminate:!0,style:{text:{padding:"3px 0"}},browserWindow:{closable:!0,webPreferences:{nodeIntegration:!0,contextIsolation:!1}}}))};var _skillSkip=function(){var e=app.setting.get("cancelUpdate");return e&&new Date-new Date(e)<432e5};updater.checkForUpdates=function(e){if(feedURL){if(updater.emit("checking-for-update"),e)updater.showUI();else if(_skillSkip())return;return request(feedURL).then(function(t){if(200!=t.statusCode&&204!=t.statusCode)return console.error("invalid status code: "+t.statusCode+" from "+feedURL),Promise.reject("Failed to check updates, invalid status code: "+t.statusCode);if(204==t.statusCode)return updater.emit("update-not-available"),Promise.reject(errCancel);var r=JSON.parse(t.body);updater.data=r;var a=app.getVersion();r.version&&a&&(app.setting.compareVersion(r.version,a)>0?(app.setting.hasUpdates=!0,app.execInAll("window.File && File.option && (File.option.hasUpdates=true)"),(e||app.setting.get("skipUpdate")!=r.version)&&updater.showDetailWindow(a,r.version,r.releaseNoteLink)):e&&(updater.showMessage(Dict.getPanelString("You're up to date!"),Dict.getPanelString("Latest version is $1, your version is $2").replace("$1",r.version).replace("$2",a)),updater.cleanUp()))}).catch(function(t){t===errCancel||(e&&updater.showError(Dict.getPanelString("Check Update Failed"),t),updater.emit("error",t))})}},updater.cleanUp=function(){updater.win&&(updater.win.destroy(),updater.win=null),updater.progressBar&&(updater.progressBar.close(),updater.progressBar=null),updater.data=null},updater.showMessage=function(e,t){updater.progressBar&&(updater.progressBar.close(),updater.progressBar=null),electron.dialog.showMessageBox({title:e,message:t,icon:t_workingDir+"/assets/icon/icon_32x32.png",buttons:["OK"]})},updater.showError=function(e,t){updater.cleanUp(),electron.dialog.showErrorBox(e||"Error",t.message||"")},updater.skipUpdate=function(){updater.data.version&&app.setting.put("skipUpdate",updater.data.version)},updater.cancelUpdate=function(){app.setting.put("cancelUpdate",new Date)},updater.downloadUpdate=function(){updater.win&&(updater.win.close(),updater.win=null);var e=updater.data.download;if(e){var t="typora-update-"+process.arch+"-"+updater.data.version+".exe",r=app.getPath("temp")+(isLinux?"/":"\\")+t;if(fs.existsSync(r))updater.askForInstall(r);else{var a=new DownloadTask(e,app.getPath("temp")+"/_"+t,{title:Dict.getPanelString("Updater"),text:Dict.getPanelString("Downloading Updates…")});a.onAbort=function(){updater.cleanUp()},a.onError=function(){updater.showError(Dict.getPanelString("Download failed"),error)},a.onSuccess=function(e){fs.move(e.getSavePath(),r,{overwrite:!0}).then(function(){updater.askForInstall(r),updater.progressBar.close()}).catch(function(){}),a.setCompleted()},a.download()}}},updater.askForInstall=function(e){electron.dialog.showMessageBox({type:"question",message:Dict.getPanelString("Install Updates ?"),buttons:[Dict.getPanelString("Quit and Install"),Dict.getPanelString("Cancel")],cancelId:1}).then(({response:t})=>{t||(console.log(e),updater.installPathOnQuit=e,app.quit())})},updater.installIfNeeded=function(){updater.installPathOnQuit&&updater.install(updater.installPathOnQuit)},updater.install=function(e){require("child_process").spawn(e,["/SILENT"],{detached:!0,stdio:["ignore","ignore","ignore"]}).unref()},ipc.handle("updater.checkForUpdates",(e,t)=>{updater.checkForUpdates(t)}),ipc.handle("updater.cancelUpdate",e=>{updater.cancelUpdate()}),ipc.handle("updater.skipUpdate",e=>{updater.skipUpdate()}),ipc.handle("updater.downloadUpdate",e=>{updater.downloadUpdate()}),module.exports=updater;